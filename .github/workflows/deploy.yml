name: Laravel Deployment

on:
  push:
    branches:
      - uat # Trigger deployment for UAT branch
      - main # Trigger deployment for Production branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [uat, main]

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: mbstring, exif, pcntl, bcmath, intl, pdo, mysqli
          ini-values: post_max_size=256M, upload_max_filesize=256M

      # Step 3: Install Composer Dependencies
      - name: Install Composer dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      # Step 4: Set Permissions for Storage and Cache
      - name: Set permissions
        run: |
          chmod -R 777 storage bootstrap/cache

      # Step 5: Set Environment Variables
      - name: Set Environment Variables
        run: |
          if [ "${{ matrix.environment }}" = "uat" ]; then
            echo "HOST=${{ secrets.UAT_HOST }}" >> $GITHUB_ENV
            echo "USER=${{ secrets.UAT_USER }}" >> $GITHUB_ENV
            echo "PATH=${{ secrets.UAT_PATH }}" >> $GITHUB_ENV
          else
            echo "HOST=${{ secrets.PRODUCTION_HOST }}" >> $GITHUB_ENV
            echo "USER=${{ secrets.PRODUCTION_USER }}" >> $GITHUB_ENV
            echo "PATH=${{ secrets.PRODUCTION_PATH }}" >> $GITHUB_ENV
          fi

      # Step 6: Deploy to Server
      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ env.HOST }}
          USER: ${{ env.USER }}
          PATH: ${{ env.PATH }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
          ssh $USER@$HOST "
            cd $PATH &&
            git pull origin ${{ matrix.environment }} &&
            composer install --no-dev --prefer-dist --optimize-autoloader &&
            php artisan migrate --force &&
            php artisan cache:clear &&
            php artisan config:clear &&
            php artisan route:cache &&
            php artisan view:cache &&
            chmod -R 777 storage bootstrap/cache
          "
